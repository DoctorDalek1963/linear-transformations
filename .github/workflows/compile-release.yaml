name: Compile and release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -r dev_requirements.txt
          pip install -e .

      - name: Check
        run: |
          mypy src/ tests/
          flake8 src/ tests/
          pycodestyle src/ tests/
          pydocstyle src/ tests/

  test:
    needs: check
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -r dev_requirements.txt
          pip install -e .

      - name: Test
        run: |
          pytest
          pytest --doctest-modules src/

  compile:
    needs: test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -r dev_requirements.txt
          pip install -e .
          pip install pyinstaller

      - name: Install UPX
        if: runner.os == 'Linux'
        run: sudo apt install upx-ucl

      - name: Compile
        run: python compile.py -f lintrans-${{ runner.os }}-${{ env.GITHUB_REF_NAME }} -v $GITHUB_REF_NAME
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-binary
          path: lintrans-${{ runner.os }}-${{ env.GITHUB_REF_NAME }}*

  publish:
    needs: compile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download Windows binary
        uses: actions/download-artifact@v3
        with:
          name: Windows-binary
          path: dist/

      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: Linux-binary
          path: dist/

      - name: Check for dev tag
        id: checkprerelease
        # We used to just check for -alpha on the end but now we check for any tag on the end
        # This allows for -beta, -dev, -rc1, etc. If it ends in -anything, the it's a pre-release
        run: |
          isprerelease=$(if [ -n "$(echo $GITHUB_REF | grep -Po -- '(v?\d+\.\d+\.\d+)-[^ ]+')" ]; then echo 1; else echo 0; fi)
          echo "::set-output name=isprerelease::$isprerelease"

      # This is practically the same step twice just to allow for pre-releases
      - name: Upload binaries (normal release)
        if: steps.checkprerelease.outputs.isprerelease == 0
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          prerelease: false
          draft: true
          body: "DESCRIPTION

          The Linux binary should work fine, but on Windows, you will get a warning that the program may be unsafe. This is expected and you can just ignore it. There's no binary for macOS due to Apple code signing issues.

          If you're running macOS, then you will need to compile the program from source. This is also an option on Linux and Windows. Instructions can be found [here](https://doctordalek1963.github.io/lintrans/tutorial/compile/).

          ### Changelog
          - ITEM"
          files: dist/lintrans*

      - name: Upload binaries (pre-release)
        if: steps.checkprerelease.outputs.isprerelease == 1
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          prerelease: true
          draft: true
          body: "DESCRIPTION

          The Linux binary should work fine, but on Windows, you will get a warning that the program may be unsafe. This is expected and you can just ignore it. There's no binary for macOS due to Apple code signing issues.

          If you're running macOS, then you will need to compile the program from source. This is also an option on Linux and Windows. Instructions can be found [here](https://doctordalek1963.github.io/lintrans/tutorial/compile/).

          ### Changelog
          - ITEM"
          files: dist/lintrans*
