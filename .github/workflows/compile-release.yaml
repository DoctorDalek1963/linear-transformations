name: Compile and release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -r dev_requirements.txt
          pip install -e .

      - name: Check
        run: |
          mypy src/ tests/
          flake8 src/ tests/
          pycodestyle src/ tests/
          pydocstyle src/ tests/

  test:
    needs: check
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -r dev_requirements.txt
          pip install -e .

      - name: Test
        run: |
          pytest
          pytest --doctest-modules src/

  compile:
    needs: test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -r dev_requirements.txt
          pip install -e .
          pip install pyinstaller

      - name: Install UPX
        if: runner.os == 'Linux'
        run: sudo apt install upx-ucl

      - name: Compile
        run: pyinstaller --onefile --windowed --distpath=./dist --name lintrans-${{ runner.os }}-$GITHUB_REF_NAME src/lintrans/__main__.py
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-binary
          path: dist/lintrans*

  publish:
    needs: compile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download Windows binary
        uses: actions/download-artifact@v3
        with:
          name: Windows-binary
          path: dist/

      - name: Download macOS binary
        uses: actions/download-artifact@v3
        with:
          name: macOS-binary
          path: dist/

      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: Linux-binary
          path: dist/

      - name: Check for alpha
        id: checkalpha
        run: |
          isalpha=$(if [ -n "$(echo $GITHUB_REF | grep -o -- 'alpha')" ]; then echo 1; else echo 0; fi)
          echo "::set-output name=isalpha::$isalpha"

      - name: Upload binaries (normal release)
        if: steps.checkalpha.outputs.isalpha == 0
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          prerelease: false
          draft: true  # I'll manually add the title and description when the draft is online
          files: dist/lintrans*

      - name: Upload binaries (pre-release)
        if: steps.checkalpha.outputs.isalpha == 1
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          prerelease: true
          draft: true  # I'll manually add the title and description when the draft is online
          files: dist/lintrans*
